// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?

  username String? @unique

  image    String?
  accounts Account[]
  sessions Session[]
  Event    Event[]
  Person   Person[]
  Work     Work[]
}

model Event {
  uid          String    @id @unique @default(cuid())
  title        String
  slug         String
  categories   category?
  dates        DateTime
  persons      Person?   @relation(fields: [personUid], references: [uid])
  locations    Location? @relation(fields: [locationUid], references: [uid])
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  author       User?     @relation(fields: [userId], references: [id])
  performances Work?     @relation(fields: [workUid], references: [uid])
  personUid    String    @unique
  locationUid  String    @unique
  userId       String
  workUid      String?   @unique
}

model Person {
  uid       String   @id @unique @default(cuid())
  title     String
  biography Json
  works     Work?    @relation(fields: [workUid], references: [uid])
  events    Event?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User?    @relation(fields: [userId], references: [id])
  workUid   String   @unique
  userId    String
}

model Location {
  uid        String  @id @unique @default(cuid())
  title      String
  slug       String
  geometries Json?
  events     Event?
  works      Work?   @relation(fields: [workUid], references: [uid])
  workUid    String? @unique
}

model Work {
  uid         String    @id @unique @default(cuid())
  title       String
  slug        String
  category    Json?
  dates       String?
  description String?
  events      Event?
  persons     Person?
  locations   Location?
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  author      User      @relation(fields: [userId], references: [id])
  userId      String
}

enum category {
  Season
  Concert
  Religious_Event
  Music_Theater
}
